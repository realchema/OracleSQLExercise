SQL> 
SQL> 
SQL> connect sys/sys as sysdba
Connected.
SQL> connect jose17/001
Connected.
SQL> 
SQL> SET SERVEROUTPUT ON
SQL> 
SQL> --------------------------------------------
SQL> 
SQL> 
SQL> CREATE OR REPLACE FUNCTION qst (p_num IN NUMBER)
  2                    RETURN NUMBER AS
  3    v_num NUMBER := p_num;
  4    v_result  NUMBER;
  5  BEGIN
  6    v_result := v_num * 9.98/100;
  7    RETURN v_result;
  8  END;
  9  /

Function created.

SQL> 
SQL> CREATE OR REPLACE FUNCTION gst (p_num IN NUMBER)
  2                    RETURN NUMBER AS
  3    v_num NUMBER := p_num;
  4    v_result  NUMBER;
  5  BEGIN
  6    v_result := v_num * 5/100;
  7    RETURN v_result;
  8  END;
  9  /

Function created.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE Q1 (p_num IN NUMBER) AS
  2      v_num NUMBER := p_num;
  3      v_gst NUMBER;
  4      v_qst NUMBER;
  5      v_total NUMBER;
  6      v_grand_total NUMBER;
  7    BEGIN
  8  
  9       v_qst := qst(v_num);
 10     v_gst := gst(v_num);
 11      v_total := v_gst + v_qst;
 12      v_grand_total := v_num + v_total;
 13  
 14  DBMS_OUTPUT.PUT_LINE( 'For a price of $' || v_num || 'You have to pay $' || v_gst || ' GST and $' || v_qst || ' QST ');
 15  
 16  DBMS_OUTPUT.PUT_LINE( 'The total tax is $' || v_total);
 17  DBMS_OUTPUT.PUT_LINE( 'The grand total is $' || v_grand_total);
 18  END;
 19  /

Procedure created.

SQL> 
SQL> EXEC Q1(30)
For a price of $30You have to pay $1.5 GST and $2.994 QST                       
The total tax is $4.494                                                         
The grand total is $34.494                                                      

PL/SQL procedure successfully completed.

SQL> 
SQL> ---------------------------------------------------------------------
SQL> 
SQL> 
SQL> CREATE OR REPLACE FUNCTION if_even (p_1 NUMBER) RETURN NUMBER AS
  2      v_result NUMBER;
  3     BEGIN
  4        IF MOD(p_1,2) = 0 THEN
  5        v_result := 1;
  6        END IF;
  7  
  8        RETURN v_result ;
  9          END;
 10    /

Function created.

SQL> 
SQL>     CREATE OR REPLACE PROCEDURE Q2 (P1 number, p2 NUMBER) as
  2      BEGIN
  3        IF p1 < p2 THEN
  4        IF if_even(p1) = 1 AND if_even(p2) = 1 THEN
  5                      DBMS_OUTPUT.PUT_LINE(p1 || ' and ' || p2 || ' are even ');
  6  
  7                      END IF;
  8            FOR even_idx IN p1+1 .. p2-1 LOOP
  9               IF if_even(even_idx)  = 1 THEN
 10                  DBMS_OUTPUT.PUT_LINE(even_idx);
 11               END IF;
 12            END LOOP;
 13        ELSIF p1 > p2 THEN
 14        IF if_even(p1) = 1 AND if_even(p2) = 1 THEN
 15                      DBMS_OUTPUT.PUT_LINE(p1 || ' and ' || p2 || ' are even ');
 16  
 17                      END IF;
 18            FOR even_idx IN p2+1 .. p1-1 LOOP
 19               IF if_even(even_idx) = 1 THEN
 20                  DBMS_OUTPUT.PUT_LINE(even_idx);
 21  
 22               END IF;
 23            END LOOP;
 24  
 25        END IF;
 26      END;
 27      /

Procedure created.

SQL> 
SQL>     EXEC Q2(40,20)
40 and 20 are even                                                              
22                                                                              
24                                                                              
26                                                                              
28                                                                              
30                                                                              
32                                                                              
34                                                                              
36                                                                              
38                                                                              

PL/SQL procedure successfully completed.

SQL>     --------------------------------------------------------------
SQL> 
SQL>     CREATE OR REPLACE PROCEDURE Q3 (p_o_id orders.o_id%TYPE) AS
  2    v_o_id  orders.o_id%TYPE;
  3    v_o_date orders.o_date%TYPE;
  4    v_days NUMBER;
  5  
  6  BEGIN
  7    SELECT o_id, o_date
  8    INTO   v_o_id, v_o_date
  9    FROM   orders
 10    WHERE  o_id = p_o_id;
 11  
 12      v_days := TRUNC(sysdate - v_o_date);
 13  
 14   DBMS_OUTPUT.PUT_LINE('Order number '  || v_o_id || ' is placed on  ' || v_o_date || ' .It has been  ' || v_days ||' days since ');
 15  
 16  EXCEPTION
 17     WHEN NO_DATA_FOUND THEN
 18        DBMS_OUTPUT.PUT_LINE(' Order id   ' || p_o_id ||
 19                              ' does not exist MY FRIEND!' );
 20  END;
 21  /

Procedure created.

SQL> 
SQL> EXEC Q3(1)
Order number 1 is placed on  29-MAY-06 .It has been  4309 days since            

PL/SQL procedure successfully completed.

SQL> 
SQL> ---------------------------------------------
SQL> 
SQL> CREATE OR REPLACE PROCEDURE Q4 (p_inv_id inventory.inv_id%TYPE) AS
  2  
  3  
  4  
  5   v_inv_qoh inventory.inv_qoh%TYPE;
  6  
  7    v_comment VARCHAR2(100) ;
  8  
  9  BEGIN
 10  
 11    SELECT inv_qoh
 12    INTO   v_inv_qoh
 13    FROM   inventory
 14    WHERE  inv_id = p_inv_id;
 15  
 16     IF v_inv_qoh > 100 THEN
 17        v_comment := 'Excellent';
 18     ELSIF v_inv_qoh > 50 AND v_inv_qoh < 99 THEN
 19        v_comment := 'Very Good';
 20     ELSIF v_inv_qoh > 10 AND v_inv_qoh < 49 THEN
 21        v_comment := 'Good';
 22    ELSIF v_inv_qoh > 2 AND v_inv_qoh < 9 THEN
 23        v_comment := 'AVERAGE';
 24     ELSIF v_inv_qoh < 2 THEN
 25        v_comment := 'Provide Discount';
 26     END IF;
 27  
 28    DBMS_OUTPUT.PUT_LINE(v_comment );
 29  
 30  EXCEPTION
 31     WHEN NO_DATA_FOUND THEN
 32        DBMS_OUTPUT.PUT_LINE(' inventory id   ' || p_inv_id ||
 33                              ' does not exist MY FRIEND!' );
 34  
 35  END;
 36  /

Procedure created.

SQL> 
SQL> EXEC Q4(3)
Excellent                                                                       

PL/SQL procedure successfully completed.

SQL> ---------------------------------------------------------------
SQL> CREATE OR REPLACE PROCEDURE Q5 (p_oid orders.o_id%TYPE,p_o_date DATE, p_o_methPMT NUMBER,
  2                  p_os_id order_source.os_id%Type, p_c_id customer.c_id%Type) AS
  3    v_os_desc order_source.os_desc%TYPE;
  4    v_c_last  customer.c_last%TYPE;
  5    v_c_first customer.c_first%Type;
  6  
  7    flag NUMBER := 2;
  8  BEGIN
  9    flag := 1;
 10    SELECT c_last, c_first
 11    INTO   v_c_last, v_c_first
 12    FROM   customer,orders
 13    WHERE  customer.c_id = orders.c_id;
 14  
 15  
 16    flag := 2;
 17    SELECT os_desc
 18    INTO   v_os_desc
 19    FROM   order_source, orders
 20    WHERE  order_source.os_id = orders.os_id;
 21  
 22    DBMS_OUTPUT.PUT_LINE(' order source id AND customer id ARE OK ');
 23  
 24  
 25     INSERT INTO orders
 26     VALUES(p_oid, p_o_date , p_o_methPMT, p_os_id, p_c_id);
 27     COMMIT;
 28  
 29  
 30    DBMS_OUTPUT.PUT_LINE(p_c_id ||' LAST =   ' || v_c_last ||
 31  ' FIRST = ' || v_c_first ||
 32  ' orders source description = ' || v_os_desc );
 33  
 34  
 35  
 36  
 37  
 38  EXCEPTION
 39    WHEN NO_DATA_FOUND THEN
 40      IF flag = 1 THEN
 41      DBMS_OUTPUT.PUT_LINE(' Customer id  ' || p_c_id ||
 42                              ' does not exist MY FRIEND!' );
 43      ELSIF flag = 2 THEN
 44      DBMS_OUTPUT.PUT_LINE(' oreder source ID  ' || p_os_id ||
 45                              ' does not exist MY FRIEND!' );
 46      END IF;
 47  END;
 48  /

Procedure created.

SQL> 
SQL> SPOOL OFF
